{"version":3,"sources":["serviceWorker.js","components/App.js","components/home/HomePage.js","components/about/AboutPage.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","className","style","padding","Link","to","activeclassname","type","data-toggle","data-target","id","React","Component","HomePage","AboutPage","href","target","ReactDOM","render","BrowserRouter","basename","process","Route","path","component","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mOAYoBA,QACU,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,0GCgBaC,0LA5Bb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,MAAO,CAACC,QAAQ,IAEhDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAA8CC,MAAO,CAACC,QAAS,WAC7EL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,eAAeI,GAAG,IAAIC,gBAAgB,UAAtD,qBACAR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBM,KAAK,SAASC,cAAY,WAC3DC,cAAY,sBACbX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BS,GAAG,qBAC5CZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,IAAIC,gBAAgB,UAAlD,SAEDR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,SAASC,gBAAgB,UAAvD,qBAlBUK,IAAMC,YCWTC,mLAVb,OACCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,QAAQJ,UAAU,0BAA3B,sBANmBU,IAAMC,WCedE,mLAXb,OACChB,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACC,QAAS,cACrBL,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,iGACAF,EAAAC,EAAAC,cAAA,0BAAiBF,EAAAC,EAAAC,cAAA,KAAGe,KAAM,2CAA4CC,OAAO,UAA5D,qBAAjB,kEANoBL,IAAMC,uBCO9BK,IAASC,OACRpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAeC,SAAUC,mBACxBvB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAW3B,IAC3BC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,IAAIC,UAAWX,IACjCf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,SAASC,UAAWV,MAGxCY,SAASC,eAAe,SJ6GpB,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAClCA,EAAaC","file":"static/js/main.2c340238.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './App.css';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container-fluid\" style={{padding:0}}>\n\n\t\t\t\t<nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\" style={{padding: '0 5rem'}}>\n\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/\" activeclassname=\"active\">My CS 356 Project</Link>\n\t\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n\t\t\t\t\t\t\tdata-target=\"#collapsibleNavbar\">\n\t\t\t\t\t\t<span className=\"navbar-toggler-icon\">\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n\t\t\t\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/\" activeclassname=\"active\">Home</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/about\" activeclassname=\"active\">About</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HomePage extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"jumbotron text-center\">\n\t\t\t\t<h1>My CS 356 React Website</h1>\n\t\t\t\t<p>I'm learning how to use React!</p>\n\t\t\t\t<Link to=\"about\" className=\"btn btn-primary btn-lg\">Learn more</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HomePage;","// Since the about page needs no data or actions, this doesn't\n// contain the usual Redux container boilerplate\n// for mapState and mapDispatch.\nimport React from 'react';\n\nclass AboutPage extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={{padding: '2rem 5rem'}}>\n\t\t\t\t<h1>About</h1>\n\t\t\t\t<p>This application uses React, React Router, and a variety of other helpful libraries.</p>\n\t\t\t\t<p>Check out the <a href={'https://github.com/jrt781/react-gh-pages'} target=\"_blank\" >GitHub repository</a> to look at\n\t\t\t\t\tthe code and see some helpful instructions</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AboutPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from \"./components/App\";\nimport HomePage from \"./components/home/HomePage\";\nimport AboutPage from \"./components/about/AboutPage\";\n\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<div>\n\t\t\t<Route path='/' component={App} />\n\t\t\t<Route exact path='/' component={HomePage} />\n\t\t\t<Route exact path='/about' component={AboutPage} />\n\t\t</div>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}